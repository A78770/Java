package ui;

import java.io.IOException;
import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.ZoneOffset;
import java.util.ArrayList;
import java.util.ResourceBundle;

import javax.swing.JOptionPane;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import model.SuperHeros;
import service.dao.UserDao;

public class SuperHerosController implements Initializable{
	@FXML
	private TableView<FxSuperHeros> tabsh;
	@FXML
	private TableColumn<FxSuperHeros, String> colnom;
	@FXML
	private TableColumn<FxSuperHeros, String> colpouv;
	@FXML
	private TableColumn<FxSuperHeros, String> colptfai;
	@FXML
	private TableColumn<FxSuperHeros, Integer> colscore;
	@FXML
	private TableColumn<FxSuperHeros, String> colcomm;
	@FXML
	private TableColumn<FxSuperHeros, String> colciv;
	@FXML
	private Button btnsupp;
	@FXML
	private Button btnann;
	@FXML
	private Button btnajt;
	@FXML
	private Button btnraf;
	private ObservableList<FxSuperHeros> data = FXCollections.observableArrayList(findallfx());
	// Event Listener on Button[#btnsupp].onAction
	@FXML
	public void btnsupph(ActionEvent event) {
		// TODO Autogenerated
		if (tabsh.getSelectionModel().getSelectedItem()!=null) {
			FxSuperHeros FxSH = tabsh.getSelectionModel().getSelectedItem();
			SuperHeros SH = FxSH.getSuperHeros();
			String query = "DELETE FROM superheros WHERE idSH="+SH.getIdSH();
			UserDao user = new UserDao();
			Connection conn = user.getConnection();
			Statement statement=null;
			try {
				statement = conn.createStatement();
				statement.executeQuery(query);
				JOptionPane.showMessageDialog(null, "Suppression réussie", "Information", JOptionPane.INFORMATION_MESSAGE);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			raf();
		}
	}
	// Event Listener on Button[#btnann].onAction
	@FXML
	public void btnannh(ActionEvent event) {
		// TODO Autogenerated
		try {
			Parent page =(Parent) FXMLLoader.load(getClass().getResource("Menu.fxml"));
			Scene scene4 = new Scene(page);
			Main.window.setScene(scene4);
			Main.window.setTitle("Menu");
			Main.window.setWidth(600);
			Main.window.setHeight(340);
		} catch (IOException g) {
			// TODO Auto-generated catch block
			g.printStackTrace();
		}
	}
	// Event Listener on Button[#btnajt].onAction
	@FXML
	public void btnajth(ActionEvent event) {
		// TODO Autogenerated
		try {
		    FXMLLoader loader = new FXMLLoader(getClass().getResource("FicheSH.fxml"));
			FicheSHController fch = new FicheSHController(null);
			loader.setController(fch);
		 	Parent page = loader.load() ;
			Scene scene4 = new Scene(page);
			Main.window.setScene(scene4);
			Main.window.setTitle("Fiche super héros");
			Main.window.setWidth(360);
			Main.window.setHeight(690);
		} catch (IOException g) {
			// TODO Auto-generated catch block
			g.printStackTrace();
		}
	}
	// Event Listener on Button[#btnraf].onAction
	@FXML
	public void btnrafh(ActionEvent event) {
		// TODO Autogenerated
		data.clear();
		data=FXCollections.observableArrayList(findallfx());
		tabsh.setItems(data);	
	}
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		// TODO Auto-generated method stub
		tabsh.setEditable(true);
		colnom.setCellValueFactory(new PropertyValueFactory<>("Nom"));
		colpouv.setCellValueFactory(new PropertyValueFactory<>("Pouvoir"));
		colptfai.setCellValueFactory(new PropertyValueFactory<>("PointFaible"));
		colscore.setCellValueFactory(new PropertyValueFactory<>("Score"));
		colcomm.setCellValueFactory(new PropertyValueFactory<>("Commentaire2"));
		colciv.setCellValueFactory(new PropertyValueFactory<>("NomPreCiv"));
		tabsh.setItems(data);
		tabsh.setOnMouseClicked( event -> {
			if( event.getClickCount() == 2 && tabsh.getSelectionModel().getSelectedItem()!=null) {
				SuperHeros SH = tabsh.getSelectionModel().getSelectedItem().getSuperHeros();
				 try {	
					 	FXMLLoader loader = new FXMLLoader(getClass().getResource("FicheSH.fxml"));
						FicheSHController fch = new FicheSHController(SH);
						loader.setController(fch);
					 	Parent page = loader.load() ;
						Scene scene4 = new Scene(page);
						Main.window.setScene(scene4);
						Main.window.setTitle("Fiche super héros : "+SH.getNom());
						Main.window.setWidth(360);
						Main.window.setHeight(690);
						fch.remplissage(SH);
					} catch (IOException g) {
						// TODO Auto-generated catch block
						g.printStackTrace();
					}
			}});
	}
	
	public ArrayList<FxSuperHeros> findallfx() {
		ArrayList<FxSuperHeros> list = new ArrayList<FxSuperHeros>();
		ArrayList<SuperHeros> liste = new ArrayList<SuperHeros>(findallSH());
		for (SuperHeros SH : liste) {
			FxSuperHeros fxSH = new FxSuperHeros(SH);
			UserDao user = new UserDao();
			Connection conn = user.getConnection();
			Statement statement=null;
			try {
				statement = conn.createStatement();
				String query="Select * FROM civil WHERE IdCiv = "+SH.getId();
				ResultSet rs = statement.executeQuery(query);
				if (rs.next()) {
					fxSH.setNomPreCiv(rs.getString("nom")+" "+rs.getString("prenom"));
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			list.add(fxSH);
		}
		return list;
	}
	
	public ArrayList<SuperHeros> findallSH(){
		ArrayList<SuperHeros> liste = new ArrayList<SuperHeros>();
		UserDao user = new UserDao();
		Connection conn = user.getConnection();
		Statement statement=null;
		try {
			statement = conn.createStatement();
			ResultSet result = statement.executeQuery("select * from superheros");
			while(result.next()) {
				ResultSet result2 = statement.executeQuery("select * from civil where IdCiv="+result.getInt("IdCiv"));
				result2.next();
				SuperHeros SH = new SuperHeros(result2.getString("nom"),result2.getString("prenom"),result2.getString("civilite"),result2.getString("coordonees"),result2.getDate("dateNaissance").toLocalDate().atStartOfDay(ZoneOffset.UTC).toInstant(),result2.getString("nationalite"),null,null,result2.getDate("dateAjout").toLocalDate().atStartOfDay(ZoneOffset.UTC).toInstant(),null,null,result.getInt("IdCiv"),result.getString("nom"),result.getString("pouvoir"),result.getString("pointFaible"),result.getInt("score"),result.getString("commentaire"),result.getInt("idSH"));
				if (result2.getDate("dateDeces")!=null) {
					SH.setDeathDate(result2.getDate("dateDeces").toLocalDate().atStartOfDay(ZoneOffset.UTC).toInstant());
				}
				if (result2.getString("commentaire")!=null) {
					SH.setCommentaire(result2.getString("commentaire"));
				}
				if (result2.getDate("dateModification")!=null) {
					SH.setModifDate(result2.getDate("dateModification").toLocalDate().atStartOfDay(ZoneOffset.UTC).toInstant());
				}
				if (result2.getString("Login")!=null) {
					SH.setLogin(result2.getString("Login"));
				}
				liste.add(SH);
			}
			return liste;

		} catch (SQLException e) {
			throw new RuntimeException(e);
		}
	}
	public void raf() {
		// TODO Autogenerated
		data.clear();
		data=FXCollections.observableArrayList(findallfx());
		tabsh.setItems(data);	
	}
}
